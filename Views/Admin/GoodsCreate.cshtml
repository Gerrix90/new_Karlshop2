@model new_Karlshop.Data.Goods

@{
    ViewBag.Title = "GoodsCreate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>GoodsCreate</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Goods</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.cat_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @{
                    List<SelectListItem> selectItems = ViewBag.MySubCatSelectList;

                    @Html.DropDownListFor(model => model.cat_id,
                                 selectItems,
                                "Select One", new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.cat_id, "", new { @class = "text-danger" })
                }

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.goods_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.goods_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.goods_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shop_price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shop_price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shop_price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.goods_quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.goods_quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.goods_quantity, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.goods_desc, htmlAttributes: new { @class = "control-label col-md-2"  })
            <div class="col-md-10">
                @Html.EditorFor(model => model.goods_desc, new { htmlAttributes = new { @class = "form-control"  } })
                @Html.ValidationMessageFor(model => model.goods_desc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ori_img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ori_img, new { htmlAttributes = new { @class = "form-control", placeholder = "You need to upload the image first and image path will auto generate" , id = "my_img_path" } } )
                @Html.ValidationMessageFor(model => model.ori_img, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.is_free_post, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.is_free_post)
                    @Html.ValidationMessageFor(model => model.is_free_post, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.last_update, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.last_update, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.last_update, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<form action="/Home/UploadFile" method="post" enctype="multipart/form-data">
    <input type="file" name="file" /><br />
    <input type="submit" value="提交" />
</form>*@


@*I made a huge mistake here, which add a razor html form, I want to make it good looking, 
    but the result is that the file can't be uploaded anymore.*@
    <div class="form-group">
        <form id="uploadForm">
            Upload Image： <input type="file" name="file" id="my_upload_img" multiple/>
            <br />
            <input type="button" value="Upload" onclick="doUpload()" />
        </form>
    </div>





<script>
    function doUpload() {
        //my_img_path
        // how can I get the multiple value of input which type is file?
        var a = document.getElementById("my_upload_img").value.substring(12);
        //alert(a);
        document.getElementById("my_img_path").value = a;
        var formData = new FormData($("#uploadForm")[0]);
        $.ajax({
            url: '@Url.Action("FileSave")',
            type: 'POST',
            data: formData,
            async: false,
            cache: false,
            contentType: false,
            processData: false,
            success: function (returndata) {
                
                alert("upload success");
            },
            error: function (returndata) {
                alert("upload failed");
            }
        });
        }
</script>

<br />
<div>
    @Html.ActionLink("Back to List", "Goods")
</div>


